{"entities": [{"name": "Riak Node", "type": "org.apache.brooklyn.entity.nosql.riak.RiakNode", "iconUrl": "", "effectors": [{"returnType": "void", "name": "bucketTypeActivate", "parameters": [{"defaultValue": null, "type": "java.lang.String", "name": "bucketTypeName"}], "description": "Activate a bucket type"}, {"returnType": "void", "name": "bucketTypeCreate", "parameters": [{"defaultValue": null, "type": "java.lang.String", "name": "bucketTypeName"}, {"defaultValue": null, "type": "java.lang.String", "name": "bucketTypeProperties"}], "description": "Create or modify a bucket type before activation"}, {"returnType": "java.util.List", "name": "bucketTypeList", "parameters": [], "description": "List all currently available bucket types and their activation status"}, {"returnType": "java.util.List", "name": "bucketTypeStatus", "parameters": [{"defaultValue": null, "type": "java.lang.String", "name": "bucketTypeName"}], "description": "Display the status and properties of a specific bucket type"}, {"returnType": "void", "name": "bucketTypeUpdate", "parameters": [{"defaultValue": null, "type": "java.lang.String", "name": "bucketTypeName"}, {"defaultValue": null, "type": "java.lang.String", "name": "bucketTypeProperties"}], "description": "Update a bucket type after activation"}, {"returnType": "void", "name": "joinCluster", "parameters": [{"defaultValue": null, "type": "java.lang.String", "name": "nodeName"}], "description": "Join the Riak cluster on the given node"}, {"returnType": "void", "name": "leaveCluster", "parameters": [], "description": "Leave the Riak cluster"}, {"returnType": "void", "name": "populateServiceNotUpDiagnostics", "parameters": [], "description": "Populates the attribute service.notUp.diagnostics, with any available health indicators"}, {"returnType": "void", "name": "recoverFailedNode", "parameters": [{"defaultValue": null, "type": "java.lang.String", "name": "nodeName"}], "description": "Recover and join the Riak cluster on the given node"}, {"returnType": "void", "name": "removeNode", "parameters": [{"defaultValue": null, "type": "java.lang.String", "name": "nodeName"}], "description": "Remove the given node from the Riak cluster"}, {"returnType": "void", "name": "restart", "parameters": [], "description": "Restart the process/service represented by an entity"}, {"returnType": "void", "name": "start", "parameters": [{"defaultValue": null, "type": "java.lang.Object", "name": "locations", "description": "The location or locations to start in, as a string, a location object, a list of strings, or a list of location objects"}], "description": "Start the process/service represented by an entity"}, {"returnType": "void", "name": "stop", "parameters": [], "description": "Stop the process/service represented by an entity"}], "sensors": [{"type": "java.util.Map", "name": "download.addon.urls", "links": {}, "description": "URL patterns for downloading named add-ons (will substitute things like ${version} automatically)"}, {"type": "java.lang.String", "name": "download.url", "links": {}, "description": "URL pattern for downloading the installer (will substitute things like ${version} automatically)"}, {"type": "java.lang.String", "name": "download.url.debian", "links": {}, "description": "URL pattern for downloading the linux Debian installer (will substitute things like ${version} automatically)"}, {"type": "java.lang.String", "name": "download.url.mac", "links": {}, "description": "URL pattern for downloading the MAC binaries tarball (will substitute things like ${version} automatically)"}, {"type": "java.lang.String", "name": "download.url.rhelcentos", "links": {}, "description": "URL pattern for downloading the linux RPM installer (will substitute things like ${version} automatically)"}, {"type": "java.lang.String", "name": "download.url.ubuntu", "links": {}, "description": "URL pattern for downloading the linux Ubuntu installer (will substitute things like ${version} automatically)"}, {"type": "java.lang.Integer", "name": "epmdListenerPort", "links": {}, "description": "Erlang Port Mapper Daemon Listener Port"}, {"type": "java.lang.Integer", "name": "erlangPortRangeEnd", "links": {}, "description": "Erlang Port Range End"}, {"type": "java.lang.Integer", "name": "erlangPortRangeStart", "links": {}, "description": "Erlang Port Range Start"}, {"type": "java.lang.String", "name": "expandedinstall.dir", "links": {}, "description": "Directory for installed artifacts (e.g. expanded dir after unpacking .tgz)"}, {"type": "java.lang.Integer", "name": "handoffListenerPort", "links": {}, "description": "Handoff Listener Port"}, {"type": "java.lang.String", "name": "host.address", "links": {}, "description": "Host IP address"}, {"type": "java.lang.String", "name": "host.name", "links": {}, "description": "Host name"}, {"type": "java.lang.String", "name": "host.subnet.address", "links": {}, "description": "Host address as known internally in the subnet where it is running (if different to host.name)"}, {"type": "java.lang.String", "name": "host.subnet.hostname", "links": {}, "description": "Host name as known internally in the subnet where it is running (if different to host.name)"}, {"type": "java.lang.String", "name": "install.dir", "links": {}, "description": "Directory for this software to be installed in"}, {"type": "java.net.URI", "name": "main.uri", "links": {}, "description": "Main URI for contacting the service/endpoint offered by this entity"}, {"type": "java.lang.Integer", "name": "riak.consistent_get_time_mean", "links": {}, "description": "Strongly consistent read latency"}, {"type": "java.lang.Integer", "name": "riak.consistent_put_time_mean", "links": {}, "description": "Strongly consistent write latency"}, {"type": "java.lang.Integer", "name": "riak.coord.redirs.total", "links": {}, "description": "riak.coord.redirs.total"}, {"type": "java.lang.Boolean", "name": "riak.install.onPath", "links": {}, "description": "Flag to indicate whether Riak is available on the PATH"}, {"type": "java.lang.Boolean", "name": "riak.install.package", "links": {}, "description": "Flag to indicate whether Riak was installed using an OS package"}, {"type": "java.lang.Integer", "name": "riak.memory.processes.used", "links": {}, "description": "riak.memory.processes.used"}, {"type": "java.lang.String", "name": "riak.node", "links": {}, "description": "Returns the riak node name as defined in vm.args"}, {"type": "java.lang.Integer", "name": "riak.node.gets", "links": {}, "description": "Gets in the last minute"}, {"type": "java.lang.Integer", "name": "riak.node.gets.total", "links": {}, "description": "Total gets since node started"}, {"type": "java.lang.Integer", "name": "riak.node.ops", "links": {}, "description": "Sum of node gets and puts in the last minute"}, {"type": "java.lang.Integer", "name": "riak.node.ops.total", "links": {}, "description": "Sum of node gets and puts since the node started"}, {"type": "java.lang.Integer", "name": "riak.node.puts", "links": {}, "description": "Puts in the last minute"}, {"type": "java.lang.Integer", "name": "riak.node.puts.total", "links": {}, "description": "Total puts since node started"}, {"type": "java.lang.Boolean", "name": "riak.node.riakNodeHasJoinedCluster", "links": {}, "description": "Flag to indicate whether the Riak node has joined a cluster member"}, {"type": "java.lang.Integer", "name": "riak.node_get_fsm_time_mean", "links": {}, "description": "Time between reception of client read request and subsequent response to client"}, {"type": "java.lang.Integer", "name": "riak.node_put_fsm_time_mean", "links": {}, "description": "Time between reception of client write request and subsequent response to client"}, {"type": "java.lang.Integer", "name": "riak.object_counter_merge_time_mean", "links": {}, "description": "Time it takes to perform an Update Counter operation"}, {"type": "java.lang.Integer", "name": "riak.object_map_merge_time_mean", "links": {}, "description": "Time it takes to perform an Update Map operation"}, {"type": "java.lang.Integer", "name": "riak.object_set_merge_time_mean", "links": {}, "description": "Time it takes to perform an Update Set operation"}, {"type": "java.lang.Integer", "name": "riak.pbPort", "links": {}, "description": "Riak Protocol Buffers Port"}, {"type": "java.lang.Integer", "name": "riak.pbc.active", "links": {}, "description": "riak.pbc.active"}, {"type": "java.lang.Integer", "name": "riak.pbc.connects", "links": {}, "description": "riak.pbc.connects"}, {"type": "java.lang.Integer", "name": "riak.read.repairs.total", "links": {}, "description": "riak.read.repairs.total"}, {"type": "java.lang.Integer", "name": "riak.sys.process.count", "links": {}, "description": "riak.sys.process.count"}, {"type": "java.lang.Integer", "name": "riak.vnode.gets", "links": {}, "description": "riak.vnode.gets"}, {"type": "java.lang.Integer", "name": "riak.vnode.gets.total", "links": {}, "description": "riak.vnode.gets.total"}, {"type": "java.lang.Integer", "name": "riak.vnode.puts", "links": {}, "description": "riak.vnode.puts"}, {"type": "java.lang.Integer", "name": "riak.vnode.puts.total", "links": {}, "description": "riak.vnode.puts.total"}, {"type": "java.lang.Integer", "name": "riak.webPort", "links": {}, "description": "Riak Web Port"}, {"type": "java.util.List", "name": "ring.members", "links": {}, "description": "all the riak nodes in the ring"}, {"type": "java.lang.String", "name": "run.dir", "links": {}, "description": "Directory for this software to be run from"}, {"type": "java.lang.Boolean", "name": "service.isUp", "links": {}, "description": "Whether the service is active and availability (confirmed and monitored)"}, {"type": "java.lang.Boolean", "name": "service.process.isRunning", "links": {}, "description": "Whether the process for the service is confirmed as running"}, {"type": "org.apache.brooklyn.core.entity.lifecycle.Lifecycle", "name": "service.state", "links": {}, "description": "Actual lifecycle state of the service"}, {"type": "org.apache.brooklyn.core.entity.lifecycle.Lifecycle$Transition", "name": "service.state.expected", "links": {}, "description": "Last controlled change to service state, indicating what the expected state should be"}, {"type": "java.lang.String", "name": "softwareprocess.pid.file", "links": {}, "description": "PID file"}, {"type": "org.apache.brooklyn.api.location.MachineProvisioningLocation", "name": "softwareservice.provisioningLocation", "links": {}, "description": "Location used to provision a machine where this is running"}], "defaultVersion": "2.0.5", "config": [{"defaultValue": "riak-%s", "type": "java.lang.String", "name": "archive.nameFormat", "reconfigurable": false, "description": "The format for the directory created when the installation archive is extracted, if required. The version string will be passed in as the first argument, replacing the %s format specifier"}, {"name": "children.startable.mode", "defaultValue": "NONE", "reconfigurable": false, "possibleValues": [{"description": "NONE", "value": "NONE"}, {"description": "FOREGROUND", "value": "FOREGROUND"}, {"description": "FOREGROUND_LATE", "value": "FOREGROUND_LATE"}, {"description": "BACKGROUND", "value": "BACKGROUND"}, {"description": "BACKGROUND_LATE", "value": "BACKGROUND_LATE"}], "type": "java.lang.Enum", "description": "Controls behaviour when starting Startable children as part of this entity's lifecycle."}, {"type": "java.lang.Boolean", "name": "customize.latch", "reconfigurable": false, "description": "Latch for blocking customize until ready"}, {"defaultValue": false, "type": "java.lang.Boolean", "name": "dontRequireTtyForSudo", "reconfigurable": false, "description": "Whether to explicitly set /etc/sudoers, so don't need tty (will leave unchanged if 'false'); some machines require a tty for sudo; brooklyn by default does not use a tty (so that it can get separate error+stdout streams); you can enable a tty as an option to every ssh command, or you can do it once and modify the machine so that a tty is not subsequently required."}, {"type": "java.util.Map", "name": "download.addon.urls", "reconfigurable": false, "description": "URL patterns for downloading named add-ons (will substitute things like ${version} automatically)"}, {"type": "java.lang.String", "name": "download.url", "reconfigurable": false, "description": "URL pattern for downloading the installer (will substitute things like ${version} automatically)"}, {"defaultValue": "http://s3.amazonaws.com/downloads.basho.com/riak/${entity.majorVersion}/${entity.fullVersion}/debian/$OS_RELEASE/riak_${entity.fullVersion}-1_amd64.deb", "type": "java.lang.String", "name": "download.url.debian", "reconfigurable": false, "description": "URL pattern for downloading the linux Debian installer (will substitute things like ${version} automatically)"}, {"defaultValue": "http://s3.amazonaws.com/downloads.basho.com/riak/${entity.majorVersion}/${entity.fullVersion}/osx/10.8/riak-${entity.fullVersion}-OSX-x86_64.tar.gz", "type": "java.lang.String", "name": "download.url.mac", "reconfigurable": false, "description": "URL pattern for downloading the MAC binaries tarball (will substitute things like ${version} automatically)"}, {"defaultValue": "http://s3.amazonaws.com/downloads.basho.com/riak/${entity.majorVersion}/${entity.fullVersion}/rhel/${entity.osMajorVersion}/riak-${entity.fullVersion}-1.el${entity.osMajorVersion}.x86_64.rpm", "type": "java.lang.String", "name": "download.url.rhelcentos", "reconfigurable": false, "description": "URL pattern for downloading the linux RPM installer (will substitute things like ${version} automatically)"}, {"defaultValue": "http://s3.amazonaws.com/downloads.basho.com/riak/${entity.majorVersion}/${entity.fullVersion}/ubuntu/$OS_RELEASE/riak_${entity.fullVersion}-1_amd64.deb", "type": "java.lang.String", "name": "download.url.ubuntu", "reconfigurable": false, "description": "URL pattern for downloading the linux Ubuntu installer (will substitute things like ${version} automatically)"}, {"type": "java.lang.Boolean", "name": "entity.running", "reconfigurable": false, "description": "Skip the startup process entirely, if service already running"}, {"type": "java.lang.Boolean", "name": "entity.started", "reconfigurable": false, "description": "Skip the startup process entirely, for running services"}, {"defaultValue": "4369", "type": "org.apache.brooklyn.api.location.PortRange", "name": "epmdListenerPort", "reconfigurable": false, "description": "Erlang Port Mapper Daemon Listener Port"}, {"defaultValue": "7999-65535", "type": "org.apache.brooklyn.api.location.PortRange", "name": "erlangPortRangeEnd", "reconfigurable": false, "description": "Erlang Port Range End"}, {"defaultValue": "6000-65535", "type": "org.apache.brooklyn.api.location.PortRange", "name": "erlangPortRangeStart", "reconfigurable": false, "description": "Erlang Port Range Start"}, {"type": "java.lang.String", "name": "expandedinstall.dir", "reconfigurable": false, "description": "Directory for installed artifacts (e.g. expanded dir after unpacking .tgz)"}, {"type": "java.util.Map", "name": "files.install", "reconfigurable": false, "description": "Mapping of files, to be copied before install, to destination name relative to installDir"}, {"type": "java.util.Map", "name": "files.preinstall", "reconfigurable": false, "description": "Mapping of files, to be copied before install, to destination name relative to installDir"}, {"type": "java.util.Map", "name": "files.runtime", "reconfigurable": false, "description": "Mapping of files, to be copied before customisation, to destination name relative to runDir"}, {"defaultValue": "8099-65535", "type": "org.apache.brooklyn.api.location.PortRange", "name": "handoffListenerPort", "reconfigurable": false, "description": "Handoff Listener Port"}, {"defaultValue": true, "type": "java.lang.Boolean", "name": "httpMonitoring.enabled", "reconfigurable": false, "description": "HTTP(S) monitoring enabled"}, {"defaultValue": true, "type": "java.lang.Boolean", "name": "inboundPorts.autoInfer", "reconfigurable": false, "description": "If set to false turns off the opening of ports based on naming convention, and also those that are of type PortRange in Java entities"}, {"defaultValue": ".*\\.port", "type": "java.lang.String", "name": "inboundPorts.configRegex", "reconfigurable": false, "description": "Regex governing the opening of ports based on config names"}, {"defaultValue": "${config['onbox.base.dir']!config['brooklyn.datadir']!'/<ERROR>-ONBOX_BASE_DIR-not-set'}/installs/${(config['install.unique_label']??)?string(config['install.unique_label']!'X',(entity.entityType.simpleName)+((config['install.version']??)?string('_'+(config['install.version']!'X'),'')))}", "type": "java.lang.String", "name": "install.dir", "reconfigurable": false, "description": "Directory for this software to be installed in"}, {"type": "java.lang.Boolean", "name": "install.latch", "reconfigurable": false, "description": "Latch for blocking install until ready"}, {"type": "java.lang.Boolean", "name": "install.skip", "reconfigurable": false, "description": "Skip the driver install commands entirely, for pre-installed software"}, {"type": "java.lang.String", "name": "install.unique_label", "reconfigurable": false, "description": "Provides a label which uniquely identifies an installation, used in the computation of the install dir; this should include something readable, and must include a hash of all data which differentiates an installation (e.g. version, plugins, etc), but should be the same where install dirs can be shared to allow for re-use"}, {"defaultValue": "2.0.5", "type": "java.lang.String", "name": "install.version", "reconfigurable": false, "description": "Version to install (Default 2.0.5)"}, {"defaultValue": true, "type": "java.lang.Boolean", "name": "java.check.hostname.bug", "reconfigurable": false, "description": "Check whether hostname is too long and will likely crash Javadue to bug 7089443"}, {"defaultValue": [], "type": "java.util.Set", "name": "java.opts", "reconfigurable": false, "description": "Java command line options"}, {"defaultValue": {}, "type": "java.util.Map", "name": "java.sysprops", "reconfigurable": false, "description": "Java command line system properties"}, {"defaultValue": "1.7", "type": "java.lang.String", "name": "java.version.required", "reconfigurable": false, "description": "Java version required"}, {"type": "java.lang.Boolean", "name": "launch.latch", "reconfigurable": false, "description": "Latch for blocking launch until ready"}, {"defaultValue": true, "type": "java.lang.Boolean", "name": "metrics.usage.retrieve", "reconfigurable": false, "description": "Whether to retrieve the usage (e.g. performance) metrics"}, {"defaultValue": false, "type": "java.lang.Boolean", "name": "openIptables", "reconfigurable": false, "description": "Whether to open the INBOUND_PORTS via iptables rules; if true then ssh in to run iptables commands, as part of machine provisioning"}, {"type": "java.lang.String", "name": "post.customize.command", "reconfigurable": false, "description": "Command to be run after the customize method being called on the driver"}, {"type": "java.lang.String", "name": "post.install.command", "reconfigurable": false, "description": "Command to be run after the install method being called on the driver"}, {"type": "java.lang.String", "name": "post.launch.command", "reconfigurable": false, "description": "Command to be run after the launch method being called on the driver"}, {"type": "java.lang.String", "name": "pre.customize.command", "reconfigurable": false, "description": "Command to be run prior to the customize method being called on the driver"}, {"type": "java.lang.String", "name": "pre.install.command", "reconfigurable": false, "description": "Command to be run prior to the install method being called on the driver"}, {"type": "java.lang.String", "name": "pre.launch.command", "reconfigurable": false, "description": "Command to be run prior to the launch method being called on the driver"}, {"defaultValue": {}, "type": "java.util.Map", "name": "provisioning.properties", "reconfigurable": false, "description": "Custom properties to be passed in when provisioning a new machine"}, {"defaultValue": [22], "type": "java.util.Collection", "name": "requiredOpenLoginPorts", "reconfigurable": false, "description": "The port(s) to be opened, to allow login"}, {"type": "java.lang.Boolean", "name": "resources.install.latch", "reconfigurable": false, "description": "Latch for blocking install resources until ready"}, {"type": "java.lang.Boolean", "name": "resources.runtime.latch", "reconfigurable": false, "description": "Latch for blocking runtime resources until ready"}, {"defaultValue": "classpath://org/apache/brooklyn/entity/nosql/riak/app.config", "type": "java.lang.String", "name": "riak.appConfig.templateUrl", "reconfigurable": false, "description": "Template file (in freemarker format) for the app.config config file"}, {"defaultValue": 65536, "type": "java.lang.Integer", "name": "riak.max.open.files", "reconfigurable": false, "description": "Number of the open files required by Riak"}, {"defaultValue": true, "type": "java.lang.Boolean", "name": "riak.networking.optimize", "reconfigurable": false, "description": "Optimize host networking when running in a VM"}, {"defaultValue": "8087-65535", "type": "org.apache.brooklyn.api.location.PortRange", "name": "riak.pbPort", "reconfigurable": false, "description": "Riak Protocol Buffers Port"}, {"defaultValue": "", "type": "java.lang.String", "name": "riak.riakConf.additionalContent", "reconfigurable": false, "description": "Template file (in freemarker format) for setting up additional settings in the riak.conf file"}, {"defaultValue": "classpath://org/apache/brooklyn/entity/nosql/riak/riak.conf", "type": "java.lang.String", "name": "riak.riakConf.templateUrl.linux", "reconfigurable": false, "description": "Template file (in freemarker format) for the app.config config file"}, {"defaultValue": "classpath://org/apache/brooklyn/entity/nosql/riak/riak-mac.conf", "type": "java.lang.String", "name": "riak.riakConf.templateUrl.mac", "reconfigurable": false, "description": "Template file (in freemarker format) for the app.config config file"}, {"defaultValue": false, "type": "java.lang.Boolean", "name": "riak.search", "reconfigurable": false, "description": "Deploy Solr and configure Riak to use it"}, {"defaultValue": "classpath://org/apache/brooklyn/entity/nosql/riak/vm.args", "type": "java.lang.String", "name": "riak.vmArgs.templateUrl", "reconfigurable": false, "description": "Template file (in freemarker format) for the vm.args config file"}, {"defaultValue": "8098-65535", "type": "org.apache.brooklyn.api.location.PortRange", "name": "riak.webPort", "reconfigurable": false, "description": "Riak Web Port"}, {"defaultValue": "${config['onbox.base.dir']!config['brooklyn.datadir']!'/<ERROR>-ONBOX_BASE_DIR-not-set'}/apps/${entity.applicationId}/entities/${entity.entityType.simpleName}_${entity.id}", "type": "java.lang.String", "name": "run.dir", "reconfigurable": false, "description": "Directory for this software to be run from"}, {"defaultValue": 8985, "type": "java.lang.Integer", "name": "search.solr.jmx_port", "reconfigurable": false, "description": "Solr port"}, {"defaultValue": 8983, "type": "java.lang.Integer", "name": "search.solr.port", "reconfigurable": false, "description": "Solr port"}, {"type": "java.lang.Boolean", "name": "setup.latch", "reconfigurable": false, "description": "Latch for blocking setup until ready"}, {"defaultValue": {}, "type": "java.util.Map", "name": "shell.env", "reconfigurable": false, "description": "Map of environment variables to pass to the runtime shell"}, {"defaultValue": "org.apache.brooklyn.entity.software.base.SoftwareProcessDriverLifecycleEffectorTasks@5d59d69c", "type": "org.apache.brooklyn.entity.software.base.SoftwareProcessDriverLifecycleEffectorTasks", "name": "softwareProcess.lifecycleTasks", "reconfigurable": false, "description": "An object that handles lifecycle of an entity's associated machine."}, {"defaultValue": "10s", "type": "org.apache.brooklyn.util.time.Duration", "name": "softwareProcess.maxSensorRebindDelay", "reconfigurable": false, "description": "The maximum delay to apply when reconnecting sensors when rebinding to this entity. Brooklyn will wait a random amount of time, up to the value of this config key, to avoid a thundering herd problem when the entity shares its machine with several others. Set to null or to 0 to disable any delay."}, {"type": "java.lang.Boolean", "name": "start.latch", "reconfigurable": false, "description": "Latch for blocking start until ready"}, {"defaultValue": "2m", "type": "org.apache.brooklyn.util.time.Duration", "name": "start.timeout", "reconfigurable": false, "description": "Time to wait for process and for SERVICE_UP before failing (in seconds, default 2m)"}, {"defaultValue": false, "type": "java.lang.Boolean", "name": "stopIptables", "reconfigurable": false, "description": "Whether to stop iptables entirely; if true then ssh in to stop the iptables service, as part of machine provisioning"}, {"type": "java.util.Map", "name": "templates.install", "reconfigurable": false, "description": "Mapping of templates, to be filled in and copied before install, to destination name relative to installDir"}, {"type": "java.util.Map", "name": "templates.preinstall", "reconfigurable": false, "description": "Mapping of templates, to be filled in and copied before pre-install, to destination name relative to installDir"}, {"type": "java.util.Map", "name": "templates.runtime", "reconfigurable": false, "description": "Mapping of templates, to be filled in and copied before customisation, to destination name relative to runDir"}], "description": "Riak is a distributed NoSQL key-value data store that offers extremely high availability, fault tolerance, operational simplicity and scalability."}]}